CREATE USER propietario IDENTIFIED BY propietario123
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;

GRANT CONNECT, RESOURCE, CREATE SESSION, CREATE TABLE, CREATE VIEW, CREATE SYNONYM TsO propietario;

connect propietario/propietario123@localhost:1521/xepdb1;

--CREACION DEL TABLESPACE 
CREATE TABLESPACE j_academico 
DATAFILE 'C:\app\kevin\product\18.0.0\oradata\XE\j_academico.DBF' 
SIZE 5M;

--Creacion de las tablas
--NACIONALIDADES
CREATE TABLE nacionalidades (
    id_nacionalidad NUMBER PRIMARY KEY
);

--PAISES
CREATE TABLE paises (
    id_pais NUMBER PRIMARY KEY,
    nom_pais VARCHAR2(100),
    codigo_iso VARCHAR2(10),
    prefijo_telefonico VARCHAR2(10),
    id_nacionalidad NUMBER,
    FOREIGN KEY (id_nacionalidad) REFERENCES nacionalidades(id_nacionalidad)
);

-- FACULTADES
CREATE TABLE facultades (
    id_facultad NUMBER PRIMARY KEY,
    nom_facultad VARCHAR2(100),
    ubicacion VARCHAR2(100),
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    fecha_creacion DATE
);

-- CARRERAS
CREATE TABLE carreras (
    id_carreras NUMBER PRIMARY KEY,
    nom_carreras VARCHAR2(100),
    creditos NUMBER,
    duracion_años NUMBER,
    nivel VARCHAR2(50),
    id_facultad NUMBER,
    FOREIGN KEY (id_facultad) REFERENCES facultades(id_facultad)
);

-- ESTUDIANTES
CREATE TABLE alumnos (
    id_alumnos NUMBER PRIMARY KEY,
    primer_nombre VARCHAR2(50),
    segundo_nombre VARCHAR2(50),
    primer_apellido VARCHAR2(50),
    segundo_apellido VARCHAR2(50),
    fecha_nacimiento DATE,
    genero VARCHAR2(10),
    direccion VARCHAR2(100),
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    fecha_ingreso DATE,
    estado VARCHAR2(20),
    id_carrera NUMBER,
    id_nacionalidad NUMBER,
    FOREIGN KEY (id_carrera) REFERENCES carreras(id_carreras),
    FOREIGN KEY (id_nacionalidad) REFERENCES nacionalidades(id_nacionalidad)
);

-- DOCENTES
CREATE TABLE docentes (
    id_docente NUMBER PRIMARY KEY,
    primer_nombre VARCHAR2(50),
    segundo_nombre VARCHAR2(50),
    primer_apellido VARCHAR2(50),
    segundo_apellido VARCHAR2(50),
    fecha_nacimiento DATE,
    genero VARCHAR2(10),
    direccion VARCHAR2(100),
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    fecha_ingreso DATE,
    salario NUMBER,
    id_carrera NUMBER,
    id_nacionalidad NUMBER,
    FOREIGN KEY (id_carrera) REFERENCES carreras(id_carreras),
    FOREIGN KEY (id_nacionalidad) REFERENCES nacionalidades(id_nacionalidad)
);

-- MATERIAS
CREATE TABLE materias (
    id_materias NUMBER PRIMARY KEY,
    nom_materia VARCHAR2(100),
    semestre NUMBER,
    codigo NUMBER,
    creditos NUMBER,
    horas_semanales NUMBER,
    id_carrera NUMBER,
    FOREIGN KEY (id_carrera) REFERENCES carreras(id_carreras)
);

-- ALUMNO_MATERIA
CREATE TABLE alumno_materia (
    id_alumno NUMBER,
    id_materia NUMBER,
    semestre NUMBER,
    años NUMBER,
    nota_final NUMBER,
    estado VARCHAR2(20),
    PRIMARY KEY (id_alumno, id_materia),
    FOREIGN KEY (id_alumno) REFERENCES alumnos(id_alumnos),
    FOREIGN KEY (id_materia) REFERENCES materias(id_materias)
);

-- DOCENTE_MATERIA
CREATE TABLE docente_materia (
    id_docente NUMBER,
    id_materia NUMBER,
    semestre NUMBER,
    años NUMBER,
    PRIMARY KEY (id_docente, id_materia),
    FOREIGN KEY (id_docente) REFERENCES docentes(id_docente),
    FOREIGN KEY (id_materia) REFERENCES materias(id_materias)
);

-- ESPECIALIDADES
CREATE TABLE especialidades (
    id_especialidad NUMBER PRIMARY KEY,
    nom_especialidad VARCHAR2(100)
);

-- DOCENTE_ESPECIALIDAD
CREATE TABLE docente_especialidad (
    id_docente NUMBER,
    id_especialidad NUMBER,
    años_experiencia NUMBER,
    PRIMARY KEY (id_docente, id_especialidad),
    FOREIGN KEY (id_docente) REFERENCES docentes(id_docente),
    FOREIGN KEY (id_especialidad) REFERENCES especialidades(id_especialidad)
);

--CREACION DEL USUARIO PARA OPERAR 

CREATE USER operador IDENTIFIED BY operador123 DEFAULT TABLESPACE j_academico
TEMPORARY TABLESPACE temp QUOTA UNLIMITED ON j_academico;

GRANT CONNECT, RESOURCE, CREATE SESSION, CREATE TABLE, CREATE VIEW, CREATE SYNONYM TO operador;

connect operador/operador123@localhost:1521/xepdb1;

--AGREGAR DATOS DE PRUEBA PARA REALIZAR LAS CONSULTAS EN EL TALLER
--NACIONALIDADES 
INSERT ALL
  INTO nacionalidades (id_nacionalidad) VALUES (1)
  INTO nacionalidades (id_nacionalidad) VALUES (2)
  INTO nacionalidades (id_nacionalidad) VALUES (3)
  INTO nacionalidades (id_nacionalidad) VALUES (4)
  INTO nacionalidades (id_nacionalidad) VALUES (5)
SELECT * FROM dual;


-- PAISES
INSERT ALL
  INTO paises (id_pais, nom_pais, codigo_iso, prefijo_telefonico, id_nacionalidad) VALUES (1, 'Colombia', 'COL', '+57', 1)
  INTO paises (id_pais, nom_pais, codigo_iso, prefijo_telefonico, id_nacionalidad) VALUES (2, 'México', 'MEX', '+52', 2)
  INTO paises (id_pais, nom_pais, codigo_iso, prefijo_telefonico, id_nacionalidad) VALUES (3, 'Argentina', 'ARG', '+54', 3)
  INTO paises (id_pais, nom_pais, codigo_iso, prefijo_telefonico, id_nacionalidad) VALUES (4, 'Perú', 'PER', '+51', 4)
  INTO paises (id_pais, nom_pais, codigo_iso, prefijo_telefonico, id_nacionalidad) VALUES (5, 'Chile', 'CHL', '+56', 5)
SELECT * FROM dual;

-- FACULTADES
INSERT ALL
  INTO facultades (id_facultad, nom_facultad, ubicacion, telefono, email, fecha_creacion) VALUES (1, 'Ingeniería', 'Bogotá', '1111', 'ing@uni.edu.co', TO_DATE('2000-01-01', 'YYYY-MM-DD'))
  INTO facultades (id_facultad, nom_facultad, ubicacion, telefono, email, fecha_creacion) VALUES (2, 'Ciencias', 'Medellín', '2222', 'ciencias@uni.edu.co', TO_DATE('2001-01-01', 'YYYY-MM-DD'))
  INTO facultades (id_facultad, nom_facultad, ubicacion, telefono, email, fecha_creacion) VALUES (3, 'Económicas', 'Cali', '3333', 'eco@uni.edu.co', TO_DATE('2002-01-01', 'YYYY-MM-DD'))
  INTO facultades (id_facultad, nom_facultad, ubicacion, telefono, email, fecha_creacion) VALUES (4, 'Humanidades', 'Barranquilla', '4444', 'hum@uni.edu.co', TO_DATE('2003-01-01', 'YYYY-MM-DD'))
SELECT * FROM dual;


-- CARRERAS
INSERT ALL
  INTO carreras (id_carreras, nom_carreras, creditos, duracion_años, nivel, id_facultad) VALUES (1, 'Ing. Sistemas', 160, 5, 'Profesional', 1)
  INTO carreras (id_carreras, nom_carreras, creditos, duracion_años, nivel, id_facultad) VALUES (2, 'Biología', 140, 4, 'Profesional', 2)
  INTO carreras (id_carreras, nom_carreras, creditos, duracion_años, nivel, id_facultad) VALUES (3, 'Economía', 130, 4, 'Profesional', 3)
  INTO carreras (id_carreras, nom_carreras, creditos, duracion_años, nivel, id_facultad) VALUES (4, 'Psicología', 135, 4, 'Profesional', 4)
  INTO carreras (id_carreras, nom_carreras, creditos, duracion_años, nivel, id_facultad) VALUES (5, 'Ing. Electronica', 155, 5, 'Profesional', 1)
SELECT * FROM dual;

--ALUMNOS
INSERT ALL
  INTO alumnos (id_alumnos, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, estado, id_carrera, id_nacionalidad) VALUES (1, 'Juan', 'Carlos', 'Pérez', 'Gómez', TO_DATE('2000-04-10', 'YYYY-MM-DD'), 'Masculino', 'Calle 123', '3001234567', 'juan.perez@uni.edu.co', TO_DATE('2020-01-15', 'YYYY-MM-DD'), 'Activo', 1, 1)
  INTO alumnos (id_alumnos, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, estado, id_carrera, id_nacionalidad) VALUES (1, 'jank', 'Carlos', 'Pérez', 'Gómez', TO_DATE('2000-04-10', 'YYYY-MM-DD'), 'Masculino', 'Calle 123', '3001234567', 'juan.perez@uni.edu.co', TO_DATE('2020-01-15', 'YYYY-MM-DD'), 'Activo', 1, 1)
  INTO alumnos (id_alumnos, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, estado, id_carrera, id_nacionalidad) VALUES (2, 'María', 'Luisa', 'Rodríguez', 'Martínez', TO_DATE('2001-06-22', 'YYYY-MM-DD'), 'Femenino', 'Cra 45 #56', '3109876543', 'maria.rodriguez@uni.edu.co', TO_DATE('2021-02-10', 'YYYY-MM-DD'), 'Activo', 2, 2)
  INTO alumnos (id_alumnos, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, estado, id_carrera, id_nacionalidad) VALUES (3, 'Luis', 'Fernando', 'García', 'Torres', TO_DATE('1999-11-12', 'YYYY-MM-DD'), 'Masculino', 'Av 1 #23', '3205554321', 'luis.garcia@uni.edu.co', TO_DATE('2019-08-20', 'YYYY-MM-DD'), 'Egresado', 3, 3)
  INTO alumnos (id_alumnos, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, estado, id_carrera, id_nacionalidad) VALUES (4, 'Ana', 'Isabel', 'López', 'Díaz', TO_DATE('2002-01-30', 'YYYY-MM-DD'), 'Femenino', 'Calle 45', '3012345678', 'ana.lopez@uni.edu.co', TO_DATE('2022-01-05', 'YYYY-MM-DD'), 'Activo', 4, 4)
  INTO alumnos (id_alumnos, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, estado, id_carrera, id_nacionalidad) VALUES (5, 'Carlos', 'Eduardo', 'Ramírez', 'Moreno', TO_DATE('1998-07-18', 'YYYY-MM-DD'), 'Masculino', 'Carrera 12', '3123456789', 'carlos.ramirez@uni.edu.co', TO_DATE('2018-07-01', 'YYYY-MM-DD'), 'Inactivo', 5, 5)
SELECT * FROM dual;

--DOCENTES
INSERT ALL
  INTO docentes (id_docente, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, salario, id_carrera, id_nacionalidad) VALUES (1, 'Fernando', 'José', 'Martínez', 'Ruiz', TO_DATE('1980-05-20', 'YYYY-MM-DD'), 'Masculino', 'Av. Siempre Viva', '3101122334', 'fernando.martinez@uni.edu.co', TO_DATE('2010-03-01', 'YYYY-MM-DD'), 5000000, 1, 1)
  INTO docentes (id_docente, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, salario, id_carrera, id_nacionalidad) VALUES (2, 'Lucía', 'Marina', 'Gómez', 'Pineda', TO_DATE('1975-10-10', 'YYYY-MM-DD'), 'Femenino', 'Cra 9', '3112233445', 'lucia.gomez@uni.edu.co', TO_DATE('2008-08-15', 'YYYY-MM-DD'), 4800000, 2, 2)
  INTO docentes (id_docente, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, salario, id_carrera, id_nacionalidad) VALUES (3, 'Oscar', 'Andrés', 'Salazar', 'Mejía', TO_DATE('1985-03-03', 'YYYY-MM-DD'), 'Masculino', 'Barrio Norte', '3123344556', 'oscar.salazar@uni.edu.co', TO_DATE('2012-06-20', 'YYYY-MM-DD'), 4700000, 3, 3)
  INTO docentes (id_docente, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, salario, id_carrera, id_nacionalidad) VALUES (4, 'Andrea', 'Paola', 'Nieto', 'Vargas', TO_DATE('1990-12-25', 'YYYY-MM-DD'), 'Femenino', 'Centro', '3134455667', 'andrea.nieto@uni.edu.co', TO_DATE('2015-09-10', 'YYYY-MM-DD'), 4600000, 4, 4)
  INTO docentes (id_docente, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_nacimiento, genero, direccion, telefono, email, fecha_ingreso, salario, id_carrera, id_nacionalidad) VALUES (5, 'Camilo', 'Esteban', 'Rojas', 'Duarte', TO_DATE('1978-08-08', 'YYYY-MM-DD'), 'Masculino', 'Av. Central', '3145566778', 'camilo.rojas@uni.edu.co', TO_DATE('2005-11-30', 'YYYY-MM-DD'), 5500000, 5, 5)
SELECT * FROM dual;


--CONSULTAS REQUERIDAS POR EL TALLER

--Debe permitir consultar a los alumnos matriculados (proyectar los atributos que tu quieras)
SELECT * FROM alumnos;

--Listar los alumnos que estudien ingeniería de sistemas y electrónica (proyectar el nombre del estudiante, el nombre de la carrera y los créditos)
SELECT a.primer_nombre, c.nom_carreras, c.creditos
FROM alumnos a
JOIN carreras c ON a.id_carrera = c.id_carreras
WHERE c.nom_carreras = 'Ing. Sistemas' OR c.nom_carreras = 'Ing. Electronica';

--Proyectar el nombre del estudiante, el apellido del estudiante. La fecha de nacimiento del estudiante y la edad del estudiante (la tabla estudiante NO lleva un atributo edad). 
SELECT primer_nombre, primer_apellido, fecha_nacimiento,
       FLOOR(MONTHS_BETWEEN(SYSDATE, fecha_nacimiento)/12) AS edad
FROM alumnos;

--Consultar cuantas carreras tiene cada facultad (proyectar el nombre de la facultad y la cantidad) 
SELECT f.nom_facultad, COUNT(c.id_carreras) AS cantidad_carreras
FROM facultades f
LEFT JOIN carreras c ON f.id_facultad = c.id_facultad
GROUP BY f.nom_facultad;

--Consultar el nombre del estudiante, su apellido, la ciudad de donde proviene y la carrera que estudia, aquellos estudiantes que sus apellidos contengan la letra A 
SELECT e.primer_nombre, e.primer_apellido, e.id_nacionalidad, c.nom_carreras
FROM alumnos e
JOIN carreras c ON e.id_carrera = c.id_carreras
WHERE UPPER(e.primer_apellido) LIKE '%A%';

--Consultar la fecha de nacimiento del alumno más joven y cuál es la fecha de nacimiento del alumno más antiguo 
SELECT MAX(fecha_nacimiento) AS alumno_mas_joven,
       MIN(fecha_nacimiento) AS alumno_mas_antiguo
FROM alumnos;

--Muéstrame las carreras y el id que tengan créditos de 150, 130, 160 o 165 (hacerlas con y o con o)
SELECT id_carreras, nom_carreras
FROM carreras
WHERE creditos IN (130, 150, 160, 165);

--Mostrar cuantos estudiantes hay que estudien ingeniería de sistemas y electrónica
SELECT COUNT(*) AS total
FROM alumnos a
JOIN carreras c ON a.id_carrera = c.id_carreras
WHERE c.id_carreras IN ('1', '5');

--Traerme el nombre de todas las carreras que tengan crédito igual a los créditos de ingeniería de sistemas (hacer una subconsulta) 

SELECT nom_carreras
FROM carreras
WHERE creditos = (
    SELECT creditos FROM carreras WHERE id_carreras = '1'
);

--Traerme el nombre, apellido y la carrera del estudiante que tenga la misma fecha de nacimiento de juan 
SELECT a2.primer_nombre, a2.primer_apellido, c.nom_carreras
FROM alumnos a1
JOIN alumnos a2 ON a1.fecha_nacimiento = a2.fecha_nacimiento AND a1.nombre = 'Juan'
JOIN carreras c ON a2.id_carrera = c.id_carreras;

SELECT USER FROM dual;